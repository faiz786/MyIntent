apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "pl.mareklangiewicz.myintent"
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 5
        versionName "1.0.3-alpha"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            // TODO SOMEDAY: different config for release
            storeFile file('keystore/open.keystore.jks')
            keyAlias 'openkey'
            storePassword 'openkey'
            keyPassword 'openkey'
        }
//        release {
//            storeFile file(System.getenv("MYINTENT_STORE_FILE"))
//            storePassword System.getenv("MYINTENT_STORE_PASSWORD")
//            keyAlias System.getenv("MYINTENT_KEY_ALIAS")
//            keyPassword System.getenv("MYINTENT_KEY_PASSWORD")
//        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //noinspection GrUnresolvedAccess,GroovyAssignabilityCheck
            signingConfig signingConfigs.release
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    resourcePrefix 'mi_'
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    testCompile 'com.google.truth:truth:0.28'
    androidTestCompile 'junit:junit:4.12'
    androidTestCompile 'com.google.truth:truth:0.28'
    androidTestCompile 'com.android.support:support-annotations:23.2.1'
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
    compile 'com.android.support:appcompat-v7:23.2.1'
    compile 'com.android.support:support-annotations:23.2.1'
//    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.4-beta2'
//    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'
//    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'
    compile('com.github.afollestad.material-dialogs:core:0.8.5.6@aar') {
        transitive = true
    }
    compile('com.github.afollestad.material-dialogs:commons:0.8.5.6@aar') {
        transitive = true
    }
    compile 'com.google.android.gms:play-services-base:8.4.0'
    compile 'com.google.android.gms:play-services-appindexing:8.4.0'
    compile project(':myactivities')
    compile project(':myfragments')
    compile project(':myloggers')
    compile project(':myres')
    compile project(':myutils')
    compile project(':myviews')
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile 'hu.supercluster:paperwork:1.2.2'
}
buildscript {
    ext.kotlin_version = '1.0.0'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version"
        classpath 'hu.supercluster:paperwork-plugin:1.2.2'
    }
}

apply plugin: 'hu.supercluster.paperwork'
paperwork {
    set = [
            buildTime: buildTime("yyyy-MM-dd HH:mm:ss"),
            gitSha: gitSha(),
            gitTag: gitTag(),
            gitInfo: gitInfo()
    ]
}


// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.getDestinationDir()
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
